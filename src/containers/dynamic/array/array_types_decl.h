#pragma once

#include <containers/iterator/iterator.h>
#include <containers/dynamic/common.h>

// dynamic array type
#define DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_TYPE(TYPE, ALLOCATOR_TYPE) NAMESPACE_CONTAINERS_DYNAMIC(CONCAT7(array, __, TYPE, _, with_allocator, _, ALLOCATOR_TYPE))
#define DYNAMIC_ARRAY_TYPE(TYPE) DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_TYPE(TYPE, DEFAULT_ALLOCATOR_TYPE(TYPE))

// dynamic array type iterator
#define DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE)\
    ITERATOR_TYPE(DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_TYPE(TYPE, ALLOCATOR_TYPE))
#define DYNAMIC_ARRAY_ITERATOR_TYPE(TYPE) ITERATOR_TYPE(DYNAMIC_ARRAY_TYPE(TYPE))

// dynamic array type const iterator
#define DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_CONST_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE)\
    CONST_ITERATOR_TYPE(DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_TYPE(TYPE, ALLOCATOR_TYPE))
#define DYNAMIC_ARRAY_CONST_ITERATOR_TYPE(TYPE) CONST_ITERATOR_TYPE(DYNAMIC_ARRAY_TYPE(TYPE))

// dynamic array type reverse iterator
#define DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_REVERSE_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE)\
    REVERSE_ITERATOR_TYPE(DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE))
#define DYNAMIC_ARRAY_REVERSE_ITERATOR_TYPE(TYPE) REVERSE_ITERATOR_TYPE(DYNAMIC_ARRAY_ITERATOR_TYPE(TYPE))

// dynamic array type reverse const iterator
#define DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_REVERSE_CONST_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE)\
    REVERSE_ITERATOR_TYPE(DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_CONST_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE))
#define DYNAMIC_ARRAY_REVERSE_CONST_ITERATOR_TYPE(TYPE) REVERSE_ITERATOR_TYPE(DYNAMIC_ARRAY_CONST_ITERATOR_TYPE(TYPE))

// dynamic array type declarations
#define DECLARE_DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_TYPE(TYPE, ALLOCATOR_TYPE)\
/* dynamic array type */\
DECLARE_STRUCT_SUBTYPE(DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_TYPE(TYPE, ALLOCATOR_TYPE), size_type, usize);\
DECLARE_STRUCT_SUBTYPE(DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_TYPE(TYPE, ALLOCATOR_TYPE), value_type, TYPE);\
typedef struct DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_TYPE(TYPE, ALLOCATOR_TYPE) {\
    TYPE* buffer;\
    STRUCT_SUBTYPE(DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_TYPE(TYPE, ALLOCATOR_TYPE), size_type) size, capacity;\
    struct ALLOCATOR_TYPE allocator;\
} DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_TYPE(TYPE, ALLOCATOR_TYPE);\
/* iterator type */\
typedef struct DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE) {\
    TYPE* /*const*/ pointer_to_element;\
} DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE);\
DECLARE_STRUCT_SUBTYPE(DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE), value_type, TYPE);\
DECLARE_STRUCT_SUBTYPE(DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE), difference_type, ptrdiff_t);\
/* const iterator type */\
typedef struct DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_CONST_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE) {\
    TYPE/* const*/* /*const*/ pointer_to_element;\
} DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_CONST_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE);\
DECLARE_STRUCT_SUBTYPE(DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_CONST_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE), value_type, TYPE);\
DECLARE_STRUCT_SUBTYPE(DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_CONST_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE), difference_type, ptrdiff_t);\
/* reverse iterator type */\
typedef struct DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_REVERSE_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE) {\
    TYPE* /*const*/ pointer_to_element;\
} DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_REVERSE_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE);\
DECLARE_STRUCT_SUBTYPE(DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_REVERSE_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE), value_type, TYPE);\
DECLARE_STRUCT_SUBTYPE(DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_REVERSE_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE), difference_type, ptrdiff_t);\
/* reverse const iterator type */\
typedef struct DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_REVERSE_CONST_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE) {\
    TYPE/* const*/* /*const*/ pointer_to_element;\
} DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_REVERSE_CONST_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE);\
DECLARE_STRUCT_SUBTYPE(DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_REVERSE_CONST_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE), value_type, TYPE);\
DECLARE_STRUCT_SUBTYPE(DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_REVERSE_CONST_ITERATOR_TYPE(TYPE, ALLOCATOR_TYPE), difference_type, ptrdiff_t)

#define DECLARE_DYNAMIC_ARRAY_TYPE(TYPE) DECLARE_DYNAMIC_ARRAY_WITH_CUSTOM_ALLOCATOR_TYPE(TYPE, DEFAULT_ALLOCATOR_TYPE(TYPE))
