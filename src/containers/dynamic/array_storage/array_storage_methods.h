#pragma once

#include "array_storage_types.h"

// dynamic array type method
#define DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR_METHOD(TYPE, ALLOCATOR_TYPE, METHOD) TYPE_METHOD(DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE), METHOD)
#define DYNAMIC_ARRAY_METHOD(TYPE, METHOD) DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR_METHOD(TYPE, DEFAULT_ALLOCATOR_TYPE(TYPE), METHOD)

// dynamic array methods declarations
#define DECLARE_DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR_METHODS_WITH_MODIFIER(MODIFIER, TYPE, ALLOCATOR_TYPE)\
struct DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE);\
DECLARE_DEFAULT_LIFECYCLE_METHODS_WITH_MODIFIER(MODIFIER, DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE));\
/* --- Construction/Destruction functions --- */\
MODIFIER struct DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE)*\
    DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR_METHOD(TYPE, ALLOCATOR_TYPE, construct_with_capacity_at)(\
        struct DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE)* const this,\
        STRUCT_SUBTYPE(DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE), size_type) const capacity);\
MODIFIER struct DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE)*\
    DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR_METHOD(TYPE, ALLOCATOR_TYPE, construct_with_allocator_at)(\
        struct DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE)* const this,\
        struct ALLOCATOR_TYPE const* const allocator);\
MODIFIER struct DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE)*\
    DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR_METHOD(TYPE, ALLOCATOR_TYPE, construct_with_allocator__capacity_at)(\
        struct DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE)* const this,\
        struct ALLOCATOR_TYPE const* const allocator,\
        STRUCT_SUBTYPE(DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE), size_type) const capacity);\
/* --- Getters/Setters functions --- */\
MODIFIER struct ALLOCATOR_TYPE const*\
    DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR_METHOD(TYPE, ALLOCATOR_TYPE, allocator)(\
        struct DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE) const* const this);\
MODIFIER STRUCT_SUBTYPE(DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE), size_type)\
    DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR_METHOD(TYPE, ALLOCATOR_TYPE, capacity)(\
        struct DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE) const* const this);\
MODIFIER TYPE const*\
    DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR_METHOD(TYPE, ALLOCATOR_TYPE, data)(\
        struct DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE) const* const this);\
MODIFIER TYPE*\
    DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR_METHOD(TYPE, ALLOCATOR_TYPE, mut_data)(\
        struct DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE)* const this);\
MODIFIER TYPE const*\
    DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR_METHOD(TYPE, ALLOCATOR_TYPE, at)(\
        struct DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE) const* const this,\
        STRUCT_SUBTYPE(DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE), size_type) const position);\
MODIFIER TYPE*\
    DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR_METHOD(TYPE, ALLOCATOR_TYPE, mut_at)(\
        struct DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE)* const this,\
        STRUCT_SUBTYPE(DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR(TYPE, ALLOCATOR_TYPE), size_type) const position)

#define DECLARE_DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR_METHODS(TYPE, ALLOCATOR_TYPE) DECLARE_DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR_METHODS_WITH_MODIFIER(, TYPE, ALLOCATOR_TYPE)
#define DECLARE_DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR_STATIC_METHODS(TYPE, ALLOCATOR_TYPE) DECLARE_DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR_METHODS_WITH_MODIFIER(static, TYPE, ALLOCATOR_TYPE)

#define DECLARE_DYNAMIC_ARRAY_STORAGE_TYPE_METHODS(TYPE) DECLARE_DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR_METHODS(TYPE, DEFAULT_ALLOCATOR_TYPE(TYPE))
#define DECLARE_DYNAMIC_ARRAY_STORAGE_TYPE_STATIC_METHODS(TYPE) DECLARE_DYNAMIC_ARRAY_STORAGE_TYPE__ALLOCATOR_STATIC_METHODS(TYPE, DEFAULT_ALLOCATOR_TYPE(TYPE))

