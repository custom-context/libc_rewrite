#pragma once

#include "map_inheritance_methods_decl.h"
#include "map_types_decl.h"
#include <utils/macros.h>

#define DEFINE_RED_BLACK_TREE_MAP_INTERFACE_VTABLE_VARIABLE_WITH_MODIFIER(MODIFIER, KEY, VALUE, COMPARATOR, ALLOCATOR)\
    DECLARE_CONTAINER_INTERFACE_VTABLE_VARIABLE_WITH_MODIFIER(MODIFIER,\
        RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR),\
        MAP_INTERFACE_TYPE(KEY, VALUE)) = {\
    .destroy_at = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(destroy_at)),\
    .clear = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(clear)),\
    .size = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(size)),\
    /* insert element */\
    .insert_copy = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(insert_copy)),\
    .insert_move = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(insert_move)),\
    /* insert or assign key-value */\
    .insert_or_assign_with_key_copy_value_copy = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(insert_or_assign_with_key_copy_value_copy)),\
    .insert_or_assign_with_key_move_value_copy = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(insert_or_assign_with_key_move_value_copy)),\
    .insert_or_assign_with_key_copy_value_move = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(insert_or_assign_with_key_copy_value_move)),\
    .insert_or_assign_with_key_move_value_move = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(insert_or_assign_with_key_move_value_move)),\
    /* direct value access by key */\
    .at = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(at)),\
    .mut_at = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(mut_at)),\
    /* find element */\
    .find = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(find)),\
    .mut_find = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(mut_find)),\
    /* erase element */\
    .erase_by_iterator = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(erase_by_iterator)),\
    .erase_by_const_iterator = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(erase_by_const_iterator)),\
    /* basic iterators' construction methods */\
    .begin = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(begin)),\
    .end = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(end)),\
    .cbegin = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(cbegin)),\
    .cend = &TYPE_METHOD(RED_BLACK_TREE_MAP_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(cend))\
}

#define DEFINE_RED_BLACK_TREE_MAP_INTERFACE_ITERATOR_VTABLE_VARIABLE_WITH_MODIFIER(MODIFIER, KEY, VALUE, COMPARATOR, ALLOCATOR)\
    DECLARE_CONTAINER_INTERFACE_VTABLE_VARIABLE_WITH_MODIFIER(MODIFIER,\
        RED_BLACK_TREE_MAP_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR),\
        MAP_INTERFACE_ITERATOR_TYPE(KEY, VALUE)) = {\
    .destroy_at = &TYPE_METHOD(RED_BLACK_TREE_MAP_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(destroy_at)),\
    /* --- Element access functions --- */\
    .key = &TYPE_METHOD(RED_BLACK_TREE_MAP_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(key)),\
    .value = &TYPE_METHOD(RED_BLACK_TREE_MAP_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(value)),\
    .const_value = &TYPE_METHOD(RED_BLACK_TREE_MAP_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(const_value)),\
    /* --- Compare functions --- */\
    /* return 0 if equals, !0 either */\
    .compare = &TYPE_METHOD(RED_BLACK_TREE_MAP_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(compare)),\
    /* --- Increment functions --- */\
    /* point this to next value & return this-value */\
    .next = &TYPE_METHOD(RED_BLACK_TREE_MAP_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(next)),\
    /* return this-value & point this to next value */\
    .pnext = &TYPE_METHOD(RED_BLACK_TREE_MAP_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(pnext)),\
    /* --- Decrement functions --- */\
    /* point this to previous value & return this-value */\
    .prev = &TYPE_METHOD(RED_BLACK_TREE_MAP_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(prev)),\
    /* return this-value & point this to previous value */\
    .pprev = &TYPE_METHOD(RED_BLACK_TREE_MAP_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(pprev))\
}


#define DEFINE_RED_BLACK_TREE_MAP_CONST_INTERFACE_ITERATOR_VTABLE_VARIABLE_WITH_MODIFIER(MODIFIER, KEY, VALUE, COMPARATOR, ALLOCATOR)\
    DECLARE_CONTAINER_INTERFACE_VTABLE_VARIABLE_WITH_MODIFIER(MODIFIER,\
        RED_BLACK_TREE_MAP_CONST_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR),\
        MAP_INTERFACE_CONST_ITERATOR_TYPE(KEY, VALUE)) = {\
    .destroy_at = &TYPE_METHOD(RED_BLACK_TREE_MAP_CONST_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(destroy_at)),\
    /* --- Element access functions --- */\
    .key = &TYPE_METHOD(RED_BLACK_TREE_MAP_CONST_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(key)),\
    .value = &TYPE_METHOD(RED_BLACK_TREE_MAP_CONST_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(value)),\
    .const_value = &TYPE_METHOD(RED_BLACK_TREE_MAP_CONST_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(const_value)),\
    /* --- Compare functions --- */\
    /* return 0 if equals, !0 either */\
    .compare = &TYPE_METHOD(RED_BLACK_TREE_MAP_CONST_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(compare)),\
    /* --- Increment functions --- */\
    /* point this to next value & return this-value */\
    .next = &TYPE_METHOD(RED_BLACK_TREE_MAP_CONST_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(next)),\
    /* return this-value & point this to next value */\
    .pnext = &TYPE_METHOD(RED_BLACK_TREE_MAP_CONST_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(pnext)),\
    /* --- Decrement functions --- */\
    /* point this to previous value & return this-value */\
    .prev = &TYPE_METHOD(RED_BLACK_TREE_MAP_CONST_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(prev)),\
    /* return this-value & point this to previous value */\
    .pprev = &TYPE_METHOD(RED_BLACK_TREE_MAP_CONST_ITERATOR_TYPE_WITH_COMPARATOR_AND_ALLOCATOR(KEY, VALUE, COMPARATOR, ALLOCATOR), VTABLE_MEMBER(pprev))\
}

#define DEFINE_RED_BLACK_TREE_MAP_INTERFACE_VTABLES_VARIABLES_WITH_MODIFIER(MODIFIER, KEY, VALUE, COMPARATOR, ALLOCATOR)\
    DEFINE_RED_BLACK_TREE_MAP_INTERFACE_VTABLE_VARIABLE_WITH_MODIFIER(MODIFIER, KEY, VALUE, COMPARATOR, ALLOCATOR);\
    DEFINE_RED_BLACK_TREE_MAP_INTERFACE_ITERATOR_VTABLE_VARIABLE_WITH_MODIFIER(MODIFIER, KEY, VALUE, COMPARATOR, ALLOCATOR);\
    DEFINE_RED_BLACK_TREE_MAP_CONST_INTERFACE_ITERATOR_VTABLE_VARIABLE_WITH_MODIFIER(MODIFIER, KEY, VALUE, COMPARATOR, ALLOCATOR)
