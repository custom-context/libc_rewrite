#pragma once

#include "common.h"
#include <memory/common.h>

/// DEFAULT_ALLOCATOR_TYPE(DefaultCombinedCtrlBlock<Type, StrongRC, WeakRC>)
#define ALLOCATOR_TYPE__RC_DEFAULT_COMBINED_CTRL_BLOCK__STRONG_RC__WEAK_RC(TYPE, STRONG_RC, WEAK_RC)\
    NAMESPACE_MEMORY(CONCAT5(CONCAT3(default_allocator__combined_ctrl_block, __, TYPE), __, STRONG_RC, __, WEAK_RC))
/// DEFAULT_ALLOCATOR_TYPE(DefaultCombinedCtrlBlock<Type, StrongRC=usize, WeakRC=usize>)
#define ALLOCATOR_TYPE__RC_DEFAULT_COMBINED_CTRL_BLOCK(TYPE)\
    ALLOCATOR_TYPE__RC_DEFAULT_COMBINED_CTRL_BLOCK__STRONG_RC__WEAK_RC(TYPE, usize, usize)
/// DEFAULT_ALLOCATOR_TYPE(DefaultCombinedCtrlBlock<Type, StrongRC, WeakRC>)::METHOD
#define ALLOCATOR__RC_DEFAULT_COMBINED_CTRL_BLOCK__STRONG_RC__WEAK_RC_METHOD(TYPE, STRONG_RC, WEAK_RC, METHOD)\
    TYPE_METHOD(ALLOCATOR_TYPE__RC_DEFAULT_COMBINED_CTRL_BLOCK__STRONG_RC__WEAK_RC(TYPE, STRONG_RC, WEAK_RC), METHOD)
/// DEFAULT_ALLOCATOR_TYPE(DefaultCombinedCtrlBlock<Type, StrongRC=usize, WeakRC=usize>)::METHOD
#define ALLOCATOR__RC_DEFAULT_COMBINED_CTRL_BLOCK_METHOD(TYPE, METHOD)\
    ALLOCATOR__RC_DEFAULT_COMBINED_CTRL_BLOCK__STRONG_RC__WEAK_RC_METHOD(TYPE, usize, usize, METHOD)


/// rc<Type, StrongRC, WeakRC>::DefaultCombinedCtrlBlock<Allocator<Type>>
#define RC_DEFAULT_COMBINED_CTRL_BLOCK_TYPE__STRONG_RC__WEAK_RC__ALLOCATOR(TYPE, STRONG_RC, WEAK_RC, ALLOCATOR)\
    TYPE_MEMBER(RC_TYPE__STRONG_RC__WEAK_RC(TYPE, STRONG_RC, WEAK_RC), CONCAT3(default_combined_ctrl_block, __, ALLOCATOR))
///
/// rc<Type, StrongRC, WeakRC>::DefaultCombinedCtrlBlock<Allocator<Type>=DefaultAllocator<Type>>
#define RC_DEFAULT_COMBINED_CTRL_BLOCK_TYPE__STRONG_RC__WEAK_RC(TYPE, STRONG_RC, WEAK_RC)\
    RC_DEFAULT_COMBINED_CTRL_BLOCK_TYPE__STRONG_RC__WEAK_RC__ALLOCATOR(TYPE, STRONG_RC, WEAK_RC,\
        ALLOCATOR_TYPE__RC_DEFAULT_COMBINED_CTRL_BLOCK__STRONG_RC__WEAK_RC(TYPE, STRONG_RC, WEAK_RC))
/// rc<Type, StrongRC=usize, WeakRC=usize>::DefaultCombinedCtrlBlock<Allocator=DefaultAllocator<Type>>
#define RC_DEFAULT_COMBINED_CTRL_BLOCK_TYPE()\
    RC_DEFAULT_COMBINED_CTRL_BLOCK_TYPE__STRONG_RC__WEAK_RC(usize, usize)
///
/// rc<Type, StrongRC, WeakRC>::DefaultCombinedCtrlBlock<Allocator<Type>>::*METHOD
#define RC_DEFAULT_COMBINED_CTRL_BLOCK__STRONG_RC__WEAK_RC__ALLOCATOR_METHOD(TYPE, STRONG_RC, WEAK_RC, ALLOCATOR, METHOD)\
    TYPE_METHOD(RC_DEFAULT_COMBINED_CTRL_BLOCK_TYPE__STRONG_RC__WEAK_RC__ALLOCATOR(TYPE, STRONG_RC, WEAK_RC, ALLOCATOR), METHOD)
/// rc<Type, StrongRC, WeakRC>::DefaultCombinedCtrlBlock<Allocator<Type>=DefaultAllocator<Type>>::*METHOD
#define RC_DEFAULT_COMBINED_CTRL_BLOCK__STRONG_RC__WEAK_RC_METHOD(TYPE, STRONG_RC, WEAK_RC, METHOD)\
    TYPE_METHOD(RC_DEFAULT_COMBINED_CTRL_BLOCK_TYPE__STRONG_RC__WEAK_RC(TYPE, STRONG_RC, WEAK_RC), METHOD)
/// rc<Type, StrongRC=usize, WeakRC=usize>::DefaultCombinedCtrlBlock<Allocator=DefaultAllocator<Type>>::*METHOD
#define RC_DEFAULT_COMBINED_CTRL_BLOCK_METHOD(TYPE, METHOD)\
    RC_DEFAULT_COMBINED_CTRL_BLOCK__STRONG_RC__WEAK_RC_METHOD(TYPE, usize, usize, METHOD)
