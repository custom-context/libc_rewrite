#pragma once

#include <memory/allocator/allocator.h>

// common primitive types
#include <limits.h>
#include "unsigned_types_aliases.h"

DEFINE_DEFAULT_ALLOCATOR_TYPE(char);
DEFINE_DEFAULT_ALLOCATOR_TYPE(short);
DEFINE_DEFAULT_ALLOCATOR_TYPE(int);
DEFINE_DEFAULT_ALLOCATOR_TYPE(long);
DEFINE_DEFAULT_ALLOCATOR_TYPE(llong);

DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, char);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, short);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, int);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, long);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, llong);


DEFINE_DEFAULT_ALLOCATOR_TYPE(uchar);
DEFINE_DEFAULT_ALLOCATOR_TYPE(ushort);
DEFINE_DEFAULT_ALLOCATOR_TYPE(uint);
DEFINE_DEFAULT_ALLOCATOR_TYPE(ulong);
DEFINE_DEFAULT_ALLOCATOR_TYPE(ullong);

DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, uchar);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, ushort);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, uint);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, ulong);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, ullong);


// fixed-width integers
#include <stdint.h>
#include "types_aliases.h"
DEFINE_DEFAULT_ALLOCATOR_TYPE(int8);
DEFINE_DEFAULT_ALLOCATOR_TYPE(int16);
DEFINE_DEFAULT_ALLOCATOR_TYPE(int32);
DEFINE_DEFAULT_ALLOCATOR_TYPE(int64);

DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, int8);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, int16);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, int32);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, int64);


DEFINE_DEFAULT_ALLOCATOR_TYPE(uint8);
DEFINE_DEFAULT_ALLOCATOR_TYPE(uint16);
DEFINE_DEFAULT_ALLOCATOR_TYPE(uint32);
DEFINE_DEFAULT_ALLOCATOR_TYPE(uint64);

DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, uint8);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, uint16);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, uint32);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, uint64);


// character types
#include "characters_types_aliases.h"
DEFINE_DEFAULT_ALLOCATOR_TYPE(char8);
DEFINE_DEFAULT_ALLOCATOR_TYPE(char16);
DEFINE_DEFAULT_ALLOCATOR_TYPE(char32);
DEFINE_DEFAULT_ALLOCATOR_TYPE(char64);
DEFINE_DEFAULT_ALLOCATOR_TYPE(wchar);

DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, char8);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, char16);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, char32);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, char64);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, wchar);


// windows character type
#if defined(_WIN32)
    DEFINE_DEFAULT_ALLOCATOR_TYPE(winchar);
    DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, winchar);
#endif


// pointer/data related types
DEFINE_DEFAULT_ALLOCATOR_TYPE(size_t);
DEFINE_DEFAULT_ALLOCATOR_TYPE(ptrdiff_t);

DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, size_t);
DECLARE_DEFAULT_ALLOCATOR_METHODS_WITH_MODIFIER(extern, ptrdiff_t);
